<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="26">
  <CheatEntries>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Infinate Items"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
// Search for item "4 byte"
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(invqty, 72 0A 48 2B C2 48 89 41 60 B0 01 C3)
label(_invqty)
registersymbol(_invqty)

invqty+5:
_invqty:
db 90 90 90 90

/*
7FF742139987 - 72 0A - jb starbound.Star::Item::consume+13
7FF742139989 - 48 2B C2  - sub rax,rdx
7FF74213998C - 48 89 41 60  - mov [rcx+60],rax &lt;&lt;
7FF742139990 - B0 01 - mov al,01
7FF742139992 - C3 - ret
*/


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
_invqty:
db 48 89 41 60

unregistersymbol(_invqty)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Monster Damage"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
// Search for health "float"
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(_health, 0F 85 97 08 00 00 D9 85 34 FE FF FF D9 C0 D8 2E D9 16 )
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

_health:
jne starbound.exe+19FDFD
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop

returnhere:

newmem:


originalcode:
//starbound.exe+19F560 - 0F85 97080000         - jne starbound.exe+19FDFD
//starbound.exe+19F566 - D9 85 34FEFFFF        - fld dword ptr [ebp-000001CC]
//starbound.exe+19F56C - D9C0                  - fld st(0)
//starbound.exe+19F56E - D8 2E                 - fsubr dword ptr [esi]
//starbound.exe+19F570 - D9 16                 - fst dword ptr [esi]

exit:
jmp returnhere
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
aobscan(_health, 0F 85 97 08 00 00 90 90 90 90 90 90 90 90 90 90 90 90 )
dealloc(newmem)
_health:
jne starbound.exe+19FDFD
fld dword ptr [ebp-000001CC]
fld st(0)
fsubr dword ptr [esi]
fst dword ptr [esi]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"Infiniate Bandage"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
// Search for health "float"
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(_health, 5D 29 D0 89 51 1C C2 08 00 66 90 )
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

_health:
pop ebp
sub eax,edx
nop
nop
nop
ret 0008
nop

returnhere:

newmem:


originalcode:
/*
005DA105 - 5D - pop ebp
005DA106 - 29 D0  - sub eax,edx
005DA108 - 89 51 1C  - mov [ecx+1C],edx &lt;&lt;
005DA10B - C2 0800 - ret 0008
005DA10E - 66 90 - nop
*/

exit:
jmp returnhere
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
aobscan(_health, 5D 29 D0 90 90 90 C2 08 00 66 90 )
dealloc(newmem)
_health:
pop ebp
sub eax,edx
mov [ecx+1C],edx
ret 0008
nop
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Infiniate Food"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
// Search for health "float"
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(_health, 29 D3 B8 01 00 00 00 89 59 18 5B 5D)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

_health:
cmovbe edx,[ecx+2C]
sub eax,edx
mov [ecx+18],edx
ret 0008


returnhere:

newmem:


originalcode:
//00561752 - 0F46 51 2C  - cmovbe edx,[ecx+2C]
//00561756 - 29 D0  - sub eax,edx
//00561758 - 89 51 18  - mov [ecx+18],edx &lt;&lt;
//0056175B - C2 0800 - ret 0008
//0056175E - 66 90 - nop

exit:
jmp returnhere
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
aobscan(_health, 90 90 B8 01 00 00 00 89 59 18 5B 5D)
dealloc(newmem)
_health:
sub ebx,edx
mov eax,00000001
mov [ecx+18],ebx
pop ebx
pop ebp
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"No Cost"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
// Search for health "float"
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(_health, B8 01 00 00 00 19 D7 89 31 89 79 04 )
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

_health:
mov eax,00000001
sbb edi,edx
nop
nop
mov [ecx+04],edi

returnhere:

newmem:


originalcode:
/*
005B19F4 - B8 01000000 - mov eax,00000001
005B19F9 - 19 D7  - sbb edi,edx
005B19FB - 89 31  - mov [ecx],esi &lt;&lt;
005B19FD - 89 79 04  - mov [ecx+04],edi
005B1A00 - 5E - pop esi
*/

exit:
jmp returnhere
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
aobscan(_health, B8 01 00 00 00 19 D7 90 90 89 79 04 )
dealloc(newmem)
_health:
mov eax,00000001
sbb edi,edx
mov [ecx],esi
mov [ecx+04],edi
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"No description"</Description>
      <LastState Value="15" RealAddress="2C1833A1570"/>
      <VariableType>4 Bytes</VariableType>
      <Address>2C1833A1570</Address>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of fsubr dword ptr [esi]</Description>
      <Address>0059F56E</Address>
      <ModuleName>starbound.exe</ModuleName>
      <ModuleNameOffset>19F56E</ModuleNameOffset>
      <Before>
        <Byte>FE</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>D9</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>D8</Byte>
        <Byte>2E</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>16</Byte>
        <Byte>C7</Byte>
        <Byte>85</Byte>
        <Byte>78</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of sub ebx,edx</Description>
      <Address>00561790</Address>
      <ModuleName>starbound.exe</ModuleName>
      <ModuleNameOffset>161790</ModuleNameOffset>
      <Before>
        <Byte>08</Byte>
        <Byte>39</Byte>
        <Byte>D3</Byte>
        <Byte>72</Byte>
        <Byte>0A</Byte>
      </Before>
      <Actual>
        <Byte>29</Byte>
        <Byte>D3</Byte>
      </Actual>
      <After>
        <Byte>B8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of sub eax,edx</Description>
      <Address>00561756</Address>
      <ModuleName>starbound.exe</ModuleName>
      <ModuleNameOffset>161756</ModuleNameOffset>
      <Before>
        <Byte>5D</Byte>
        <Byte>0F</Byte>
        <Byte>46</Byte>
        <Byte>51</Byte>
        <Byte>2C</Byte>
      </Before>
      <Actual>
        <Byte>29</Byte>
        <Byte>D0</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>51</Byte>
        <Byte>18</Byte>
        <Byte>C2</Byte>
        <Byte>08</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of sub eax,edx</Description>
      <Address>00572276</Address>
      <ModuleName>starbound.exe</ModuleName>
      <ModuleNameOffset>172276</ModuleNameOffset>
      <Before>
        <Byte>5D</Byte>
        <Byte>0F</Byte>
        <Byte>46</Byte>
        <Byte>51</Byte>
        <Byte>2C</Byte>
      </Before>
      <Actual>
        <Byte>29</Byte>
        <Byte>D0</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>51</Byte>
        <Byte>18</Byte>
        <Byte>C2</Byte>
        <Byte>08</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [ecx+18],edx</Description>
      <Address>00572278</Address>
      <ModuleName>starbound.exe</ModuleName>
      <ModuleNameOffset>172278</ModuleNameOffset>
      <Before>
        <Byte>46</Byte>
        <Byte>51</Byte>
        <Byte>2C</Byte>
        <Byte>29</Byte>
        <Byte>D0</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>51</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>C2</Byte>
        <Byte>08</Byte>
        <Byte>00</Byte>
        <Byte>66</Byte>
        <Byte>90</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rcx+60],rax</Description>
      <Address>7FF74213998C</Address>
      <ModuleName>starbound.exe</ModuleName>
      <ModuleNameOffset>25998C</ModuleNameOffset>
      <Before>
        <Byte>72</Byte>
        <Byte>0A</Byte>
        <Byte>48</Byte>
        <Byte>2B</Byte>
        <Byte>C2</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>60</Byte>
      </Actual>
      <After>
        <Byte>B0</Byte>
        <Byte>01</Byte>
        <Byte>C3</Byte>
        <Byte>32</Byte>
        <Byte>C0</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
